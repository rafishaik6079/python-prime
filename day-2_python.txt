#Grade Classification problem
marks=int(input("Enter marks: "))
if marks<=100:
---->if marks<=90:
---->---->A
---->elif marks>=80 and marks<=89:
---->---->B
---->elif marks>=70 and marks<=79:
---->---->C
---->elif marks>=60 and marks<=69:
---->---->D
---->else:
---->---->Fail
else:
---->enter valid marks

#While loop with else and problems
loops: repetetion
2 types
#for loop: finite
#while loop:infinite (for integers)
4 basic steps:

#syntex
initial value
while con:
---->statement
---->update
else:
---->statement

#Factorial of given number
a=int(input("a: ")) #5
if a<0:
---->invalid
elif a==0 or a==1:
---->answer 1
else:
---->fact=1
---->while a!=0:
---->---->fact=fact*a
---->---->a=a-1
---->print("factorial of {} is {}".format(a,fact))

#Sum of natural number
n=int(input("Enter a number"))
if n<0:
---->invalid
elif n==1:
---->answer 1
else:
---->s=1
---->while a!=0:
---->---->s=s+n
---->---->a=a-1
---->print("factorial of {} is {}".format(n,fact))

#for loop: 2 type syntax
1.defaultly it take 0
2.range/in expression
3.statement
4.update: default by 1

#Syntax
syntax_1: Using expression(all datatypes except integers and float types)
for expre in expression:
---->statement
#example
name="Bottle"
for i in name:
---->print(i)
syntax_2: Using expression(start,stop-1,step)
for i in range(start,stop-1,step):
---->statement
example
for i in range(1,11):
---->print(i)

#for-else
same as while-else loop
-->in for-else block else is used for modify or optimize the code

#Check whether given number is prime or not
prime number is a +ve integer which is having multiples of 1 and the number multiplies itself.

#prime number without using else block
a=int(input("Enter a number: "))
c=0
for i in range(1,a+1):
---->if a%i==0:
---->---->c+=1
if c==2:
---->print("{} is a prime number".format(a))
else:
---->print("%d is not a prime number"%(a))

#prime number using else block
a=int(input("Enter a number: "))
for i in range(2,a):
---->if a%i==0:
---->---->print("not prime")
---->---->break
else:
---->print("prime")
#list of prime numbers
a=5
b=15
for i in range(a,b+1):
---->for j in range(2,i):
---->---->if i%j==0:
---->---->---->break
---->else:
---->---->print(i)

#operators
#Type conversion
#bitwise operators
-->It works on bits(0,1)
<< -->left more  a*(2**b)
>> -->right less  a/(2**b)
^  -->opposite gives 1(XOR)  
&  -->same gives 1(OR) both values are T
|  -->opposite/same gives 1(AND) any one is T
~  -->-(n+1)(negation)

The total number of ASCII values is 128
ranging from 0 to 127

Breakdown:
0-31:ontrol characters(non-printable)
32-126:Printable characters(including digits,letters, punctuations, and special charactes)
127:The DEL (Delete) control characters
Summary of Printable ASCII values from 48 to 57
Uppercase Letters(A-Z):65-90
Lowercase Letters(a-z):97-122

#computer number system
4 types
1.decimal form: base 10:0,1,2,3,4,5,6,7,8,9
2.binary form: base 2: 0,1
3.Octal form: base 8: 0,1,2,3,4,5,6,7
4.hexadecimal form: base 16:0,1,2,3,4,5,6,7,8,9,capitals:A,B,C,D,E,F or small:a,b,c,d,e,f
a=100
bin(a)...0b
oct(a)...0o
hex(a)...0x

















































